/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.1.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.caixa.rentcar.application.api;

import com.caixa.rentcar.application.model.ApiCarInfoDto;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-03-13T09:38:15.714951+01:00[Europe/Madrid]")
@Validated
@Api(value = "car", description = "the car API")
public interface CarApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /car/inventory/{carPlate} : Returns car detail by Id
     * Returns a map of status codes to quantities
     *
     * @param carPlate Id of car that needs to be retrieved (required)
     * @return successful operation (status code 200)
     *         or Invalid carPlate value (status code 400)
     *         or Car not found (status code 404)
     */
    @ApiOperation(value = "Returns car detail by Id", nickname = "findCarInventoryByCarPlate", notes = "Returns a map of status codes to quantities", response = ApiCarInfoDto.class, tags={ "inventory", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = ApiCarInfoDto.class),
        @ApiResponse(code = 400, message = "Invalid carPlate value"),
        @ApiResponse(code = 404, message = "Car not found") })
    @GetMapping(
        value = "/car/inventory/{carPlate}",
        produces = { "application/json" }
    )
    default ResponseEntity<ApiCarInfoDto> _findCarInventoryByCarPlate(@ApiParam(value = "Id of car that needs to be retrieved",required=true) @PathVariable("carPlate") String carPlate) {
        return findCarInventoryByCarPlate(carPlate);
    }

    // Override this method
    default  ResponseEntity<ApiCarInfoDto> findCarInventoryByCarPlate(String carPlate) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"order_history\" : [ { \"end_date\" : \"\", \"client_dni\" : \"client_dni\", \"created_on\" : \"created_on\", \"id\" : 1, \"client_fullname\" : \"client_fullname\", \"start_date\" : \"\" }, { \"end_date\" : \"\", \"client_dni\" : \"client_dni\", \"created_on\" : \"created_on\", \"id\" : 1, \"client_fullname\" : \"client_fullname\", \"start_date\" : \"\" } ], \"year\" : 6, \"created_on\" : \"created_on\", \"plate\" : \"plate\", \"model\" : \"model\", \"id\" : 0, \"type\" : \"PREMIUN\", \"make\" : \"make\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /car/inventory/list : Returns car inventories by carPlate or category
     * Returns car inventories by carPLate or category
     *
     * @return successful operation (status code 200)
     *         or Invalid carPlate value (status code 401)
     *         or Invalid categoryId value (status code 402)
     *         or Car/Category not found (status code 404)
     */
    @ApiOperation(value = "Returns car inventories by carPlate or category", nickname = "getCarInventory", notes = "Returns car inventories by carPLate or category", response = ApiCarInfoDto.class, responseContainer = "List", tags={ "inventory", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = ApiCarInfoDto.class, responseContainer = "List"),
        @ApiResponse(code = 401, message = "Invalid carPlate value"),
        @ApiResponse(code = 402, message = "Invalid categoryId value"),
        @ApiResponse(code = 404, message = "Car/Category not found") })
    @GetMapping(
        value = "/car/inventory/list",
        produces = { "application/json" }
    )
    default ResponseEntity<List<ApiCarInfoDto>> _getCarInventory() {
        return getCarInventory();
    }

    // Override this method
    default  ResponseEntity<List<ApiCarInfoDto>> getCarInventory() {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"order_history\" : [ { \"end_date\" : \"\", \"client_dni\" : \"client_dni\", \"created_on\" : \"created_on\", \"id\" : 1, \"client_fullname\" : \"client_fullname\", \"start_date\" : \"\" }, { \"end_date\" : \"\", \"client_dni\" : \"client_dni\", \"created_on\" : \"created_on\", \"id\" : 1, \"client_fullname\" : \"client_fullname\", \"start_date\" : \"\" } ], \"year\" : 6, \"created_on\" : \"created_on\", \"plate\" : \"plate\", \"model\" : \"model\", \"id\" : 0, \"type\" : \"PREMIUN\", \"make\" : \"make\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
